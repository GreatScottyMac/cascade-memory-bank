# Cascade Memory Bank System Rules

# Initialization Protocol
initialization:
  command: "Follow the protocol in your .windsurfrules"  # Explicit command required
  required: true
  actions:
    - "Read all files in memory-bank"
    - "Load and validate context"
    - "Build relationship map"
  validation:
    - "Verify memory bank and core files"
    - "Check file permissions"

# Update Strategy
updates:
  primary: "real-time"  # Emphasize real-time updates
  real_time_triggers:
    - Code changes
    - Design decisions
    - Implementation changes
    - Documentation updates
    - System configuration changes
  
  backup: "umb"  # UMB as fallback option
  umb_triggers:
    - Session end
    - Explicit user request

# Note on Memory Bank Files
# Cascade does not require user approval to edit memory bank files.
# These files are primarily for Cascade's use, with user access as a secondary consideration.

# Core Files and Operations
core_files:
  activeContext.md:
    purpose: "Track current state and goals"
    sections: [objectives, decisions, questions, blockers]
  productContext.md:
    purpose: "Define project scope"
    sections: [overview, components, organization, standards]
  progress.md:
    purpose: "Track work status"
    sections: [completed, current, next, issues]
  decisionLog.md:
    purpose: "Record decisions"
    sections: [technical, architecture, implementation, alternatives]

operations:
  read:
    - "Build complete context at startup"
    - "Track dependencies"
  write:
    - "Update immediately on notable events"
    - "Preserve file structure"
    - "Maintain cross-references"

  # Event Priority
  priority:
    high:
      - Critical decisions
      - Blocking issues
      - Major code changes
    medium:
      - Progress updates
      - Minor code changes
    low:
      - Documentation improvements
      - Reference updates
# Tools Configuration
tools:
  file_operations:
    find_by_name: "Locate memory banks"
    list_dir: "Read structure"
    view_file: "Read contents"
    replace_file_content: "Update files"
    write_to_file: "Create files"
  search:
    grep_search: "Find patterns"
    codebase_search: "Find code"

    core_files:
      activeContext.md:
        purpose: "Track session state and goals"
        sections: [objectives, decisions, questions, blockers]
      productContext.md:
        purpose: "Define project scope"
        sections: [overview, components, organization, standards]
      progress.md:
        purpose: "Track work status"
        sections: [completed, current, next, issues]
      decisionLog.md:
        purpose: "Record decisions"
        sections: [technical, architecture, implementation, alternatives]

    file_handling:
      tools:
        list_dir: "Get structure and relationships"
        view_file: "Read and process contents"
        write_to_file: "Create with templates"
        replace_file_content: "Update preserving structure"
      behaviors:
        - Read ALL files at startup
        - Build complete context
        - Track dependencies
        - Note inconsistencies

# Behaviors
behaviors:
  core:
    - "Monitor project-relevant events"
    - "Update in real-time when appropriate"
    - "Cross-reference related information"
    - "Document with context and timestamps"
  filtering:
    include:
      - "Project-related changes"
      - "System configuration updates"
      - "Implementation decisions"
    exclude:
      - "General knowledge questions"
      - "Off-topic discussions"
      - "Temporary debug outputs"

  general_rules:
    file_reading:
      - Use tools properly
      - Build full context
      - Note gaps
    context:
      - Process all files
      - Cross-reference
      - Track patterns
    completion:
      - Clear next steps
      - Note blockers
      - Suggest tasks

  memory_updates:
    write_mode:
      - Preserve structure
      - Update sections
      - Maintain links
    chat_mode:
      - Track updates in real-time
      - Log notable events immediately
      - Document context changes
      - Note issues with timestamps
      - Suggest fixes proactively

  interaction_handling:
    project_relevant:
      indicators:
        - Memory bank system changes needed
        - Implementation work required
        - Documentation updates needed
        - Configuration changes required
        - System state changes detected
      actions:
        - Update relevant memory bank files
        - Document changes and decisions
        - Maintain project context
        - Cross-reference related information
    non_project:
      indicators:
        - General knowledge questions
        - Off-topic discussions
        - Research queries unrelated to memory bank
        - Clarification of non-project topics
      actions:
        - Provide requested information
        - Do not update memory bank files
        - Maintain focus on primary task when returning to project work

  file_authority:
    write_mode:
      can: [create, update, change]
      must: [maintain consistency, update refs]
    chat_mode:
      can: [read, find, identify]
      must: [suggest, note needs]

  error_handling:
    missing_files:
      - Note impact
      - Guide creation
    inconsistencies:
      - Flag conflicts
      - Suggest fixes
    gaps:
      - Document missing
      - Prioritize updates